{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cernu\\\\packagetracking-frontend\\\\src\\\\ViewMyPackages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewMyPackages() {\n  _s();\n  const [packages, setPackages] = useState([]); // Stocăm pachetele\n  const [error, setError] = useState(false); // Stocăm starea erorii\n\n  useEffect(() => {\n    // Fetch către server pentru a obține lista de pachete\n    fetch('http://localhost:3000/packages') // Schimbă URL-ul dacă endpoint-ul e diferit\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch');\n      }\n      return response.json();\n    }).then(data => setPackages(data)).catch(() => setError(true));\n  }, []); // Rulează doar la montarea componentei\n\n  // În caz de eroare\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to fetch packages. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Dacă nu sunt pachete\n  if (packages.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No packages available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Dacă sunt pachete disponibile\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Packages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: packages.map(pkg => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pkg.name\n      }, pkg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewMyPackages, \"1LjmRgDUI9NwnNAYsizdvNnu1UM=\");\n_c = ViewMyPackages;\nexport default ViewMyPackages;\nvar _c;\n$RefreshReg$(_c, \"ViewMyPackages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ViewMyPackages","_s","packages","setPackages","error","setError","fetch","then","response","ok","Error","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pkg","name","id","_c","$RefreshReg$"],"sources":["C:/Users/cernu/packagetracking-frontend/src/ViewMyPackages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ViewMyPackages() {\r\n  const [packages, setPackages] = useState([]); // Stocăm pachetele\r\n  const [error, setError] = useState(false);   // Stocăm starea erorii\r\n\r\n  useEffect(() => {\r\n    // Fetch către server pentru a obține lista de pachete\r\n    fetch('http://localhost:3000/packages') // Schimbă URL-ul dacă endpoint-ul e diferit\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => setPackages(data))\r\n      .catch(() => setError(true));\r\n  }, []); // Rulează doar la montarea componentei\r\n\r\n  // În caz de eroare\r\n  if (error) {\r\n    return <p>Failed to fetch packages. Please try again later.</p>;\r\n  }\r\n\r\n  // Dacă nu sunt pachete\r\n  if (packages.length === 0) {\r\n    return <p>No packages available.</p>;\r\n  }\r\n\r\n  // Dacă sunt pachete disponibile\r\n  return (\r\n    <div>\r\n      <h2>My Packages</h2>\r\n      <ul>\r\n        {packages.map((pkg) => (\r\n          <li key={pkg.id}>{pkg.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewMyPackages;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAG;;EAE7CC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAAA,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKT,WAAW,CAACS,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAC,MAAMR,QAAQ,CAAC,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAID,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAe,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjE;;EAEA;EACA,IAAIhB,QAAQ,CAACiB,MAAM,KAAK,CAAC,EAAE;IACzB,oBAAOpB,OAAA;MAAAe,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtC;;EAEA;EACA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnB,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACkB,GAAG,CAAEC,GAAG,iBAChBtB,OAAA;QAAAe,QAAA,EAAkBO,GAAG,CAACC;MAAI,GAAjBD,GAAG,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjB,EAAA,CAtCQD,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAwCvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}